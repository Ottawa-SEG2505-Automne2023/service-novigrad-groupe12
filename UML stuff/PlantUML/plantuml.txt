@startuml
skin rose

class Account {
  -String username
  -String nom
  -String prenom
  -String role
  -String password
  +Account()
  +Account(String, String, String, String, String)
  +String getUsername()
  +String getNom()
  +String getPrenom()
  +String getRole()
  +String getPassword()
  +void setUsername(String)
  +void setNom(String)
  +void setPrenom(String)
  +void setRole(String)
  +void setPassword(String)
  +int compareTo(Account)
  -int sign(int)
}
class AdminUserAdapter {
  -AdminAccountManageActivity CONTEXT
  -List<Account> USERS
  +AdminUserAdapter(AdminAccountManageActivity, List<Account>)
  +View getView(int, View, ViewGroup)
}
class BranchAccount extends Account {
  -HashMap<String, Boolean> SERVICEMAP
  -List<Boolean> DAYSLIST
  -int openingHours
  -int closingHours
  -String address
  +BranchAccount()
  +BranchAccount(String, String, String, String, String)
  +HashMap<String, Boolean> getServiceMap()
  +List<Boolean> getDaysList()
  +int getOpeningHours()
  +int getClosingHours()
  +String getAddress()
  +void setServiceMap(HashMap<String, Boolean>)
  +void setDaysList(List<Boolean>)
  +void setOpeningHours(int)
  +void setClosingHours(int)
  +void setAddress(String)
  +String storedHoursToRealHours(int)
}
class AdminServiceAdapter {
  -AdminServiceManageActivity CONTEXT
  -List<ServiceForm> SERVICES
  +AdminServiceAdapter(AdminServiceManageActivity, List<ServiceForm>)
  +View getView(int, View, ViewGroup)
}
class EditFormElementAdapter {
  -EditFormActivity CONTEXT
  -List<FormElement> ELEMENTS 
  -TreeMap<FormElement, BaseHolder> HOLDERS
  -TreeMap<FormElement, Boolean> HOLDERSENABLED
  +EditFormElementAdapter(EditFormActivity, List<FormElement>)
  +int getItemViewType(int)
  +ViewHolder onCreateViewHolder(ViewGroup, int)
  +void onBindViewHolder(ViewHolder, int)
  +int getItemCount()
  +void onViewRecycled(ViewHolder)
  +TreeMap<FormElement, BaseHolder> getHolders()
  +boolean isEnabled(int)
}
class BaseHolder {
  #TextView namePrompt
  #EditText nameField
  #Button del
  +BaseHolder(View)
  +void setDeleteMethod(Callable)
  +void fixButton()
  +String getName()
}
class FieldViewHolder extends BaseHolder {
  -EditText LIMITFIELD
  -Spinner VALIDATORSPINNER
  +FieldViewHolder(View)
  +int getLimit()
  +int getValidator()
}
class SpinnerViewHolder extends BaseHolder {
  -EditText ELEMSFIELD
  +SpinnerViewHolder(View)
  +List<String> getElements()
}
class DocumentViewHolder extends BaseHolder {
  +DocumentViewHolder(View)
}
enum ElementType {
  TEXTFIELD
  SPINNER
  DOCUMENT
}
class ExtraFormData {
  -int charLimit
  -int validatorClass
  -List<String> ELEMENTS
  +ExtraFormData()
  +int getCharLimit()
  +int getValidatorClass()
  +List<String> getElements()
  +void setCharLimit(int)
  +void setValidatorClass(int)
  +void setElements(List<String>)
}
class FormElement {
  -ElementType tyoe
  -String label
  -ExtraFormData extra 
  +FormElement()
  +FormElement(ElementType, String, ExtraFormData)
  +void setType(ElementType)
  +void setLabel(String)
  +void setExtra(ExtraFormData)
  +ElementType getType()
  +String getLabel()
  +ExtraFormData getExtra()
  +int compareTo(FormElement)
}
class ServiceForm {
  -List<FormElement> ELEMENTS
  -String name 
  -String id 
  +ServiceForm()
  +void setElements(List<FormElement>)
  +void setName(String)
  +void setId(String)
  +List<FormElement> getElements()
  +String getName()
  +String getId()
  +void open(Activity, String)
  +boolean equals(ServiceForm)
}
class AddressValidator extends FieldValidator {
  -{static}Pattern ADDRESSPATTERN
  +AddressValidator(Updatable, TextView, String)
  +boolean validateText(CharSequence)
}
class FieldValidator {
  #Updatable ORIGIN
  #TextView FIELDLABEL
  #String initialText
  #String errorText
  -boolean canBeEmpty
  +FieldValidator(Updatable, TextView, String)
  +void afterTextChanged(Editable)
  +void beforeTextChanged(CharSequence, int, int, int)
  +void onTextChanged(CharSequence, int, int, int)
  +void allowEmpty()
  #boolean validateText(CharSequence)
}
class NameValidator extends UserPassValidator {
  #String validSpecials
  +NameValidator(Updatable, TextView, String)
  +String getValidSpecials()
}
class NumberValidator extends FieldValidator {
  +NumberValidator(Updatable, TextView, String)
  #boolean validateText(CharSequence)
}
class OldDateValidator extends FieldValidator {
  +OldDateValidator(Updatable, TextView, String)
  +boolean validateText(CharSequence)
  -LocalDate getDate(CharSequence)
}
class UserPassValidator extends FieldValidator {
  #String validSpecials
  +UserPassValidator(Updatable, TextView, String)
  +boolean validateText(CharSequence)
  +String getValidSpecials()
}
interface Callable {
  void call(Object)
}
class DataModifiedHook {
  -Callable METHOD 
  -String KEY
  +DataModifiedHook(Callable, String)
  +void call()
  +String getKey()
}
interface Updatable {
  void update()
}
class DatabaseHandler {
  +{static}Account user 
  -{static}FirebaseDatabase DATABASE 
  -{static}DatabaseReference USERSREF
  -{static}ArrayList<Account> USERS 
  -{static}TreeMap<String, DataModifiedHook> ONUSERSMODIFIEDEVENTS
  -{static}DatabaseReference SERVICESREF
  -{static}ArrayList<ServiceForm> SERVICES
  +{static}Class<?> loginAsUser(Account)
  +{static}void addOnModifiedEvent(String, DataModifiedHook)
  +{static}void removeOnModifiedEvent(String, String)
  +{static}ArrayList<Account> getUserList()
  +{static}void deleteUser(Account)
  +{static}void addService(ServiceForm)
  +{static}void deleteService(ServiceForm)
  +{static}ArrayList<ServiceForm> getServicesList()
  +{static}FirebaseDatabase getDatabase()
  -{static}void runServiceLoader()
}
class AdminAccountManageActivity {
  -ListView usersListView
  #void onCreate(Bundle)
  #void onStart()
  #void onStop()
  +void showAccountDeletionConfirmation(Account)
}
class AdminMainActivity extends WelcomeActivity {
  #void onCreate(Bundle)
}
class AdminServiceManageActivity {
  -ListView serviceList 
  #void onCreate(Bundle)
  #void onStart()
}
class EditFormActivity implements Updatable {
  -RecyclerView list 
  -Spinner typeSpinner
  -Button saveButton
  -EditText nameField
  -TextView namePrompt
  -ServiceForm service
  #void onCreate(Bundle)
  #void onStart()
  +void update()
  +void compileForm()
  +void compileElement(EditFormElementAdapter, BaseHolder, int)
  +void showFormDeletionConfirmation(ServiceForm)
}
class EditProfileActivity implements Updatable {
  -List<CheckBox> DAYBOXES
  -Spinner openingSpinner
  -Spinner closingSpinner
  -ListView serviceList 
  -TextView addressPrompt
  -EditText addressField
  -Button save 
  #void onCreate(Bundle)
  +void update()
  -void saveProfile()
}
class BranchServiceAdapter {
  -AppCompatActivity CONTEXT
  -List<ServiceForm> SERVICES 
  -HashMap<String, Boolean> SERVICETOGGLES
  +BranchServiceAdapter(AppCompatActivity, List<ServiceForm>)
  +View getView(int, View, ViewGroup)
  +HashMap<String, Boolean> getServiceToggles()
}
class EmployeeMainActivity extends WelcomeActivity {
  #void onCreate(Bundle)
}
class FillFormActivity {
  #void onCreate(Bundle)
}
class LoginActivity implements Updatable {
  -EditText userField
  -EditText passField
  -TextView userLabel
  -TextView passLabel
  -Button btnLogin
  #void onCreate(Bundle)
  +void update()
  +void attemptLogin(View)
  +void signupMenu(View)
}
class MainActivity extends WelcomeActivity {
  #void onCreate(Bundle)
}
class SignupActivity implements Updatable {
  -Spinner roleSpinner
  -EditText signupUsername
  -EditText signupPrenom
  -EditText signupPrenom
  -EditText signupPassword
  -TextView signupUsernamePrompt
  -TextView signupPasswordPrompt
  -Button btnSignup
  #void onCreate(Bundle)
  +void update()
  +void attemptSignup(View)
}
class WelcomeActivity {
  #TextView welcomeText
  #void onStart()
}

AdminUserAdapter "1"-left-"1" AdminAccountManageActivity
AdminUserAdapter "1"-down->"*" Account
AdminServiceAdapter "1"-down-"1" AdminServiceManageActivity
AdminServiceAdapter "1"-left->"*" ServiceForm
EditFormElementAdapter "1"-up-"1" EditFormActivity
EditFormElementAdapter "1"-right->"*" FormElement
BaseHolder -left-> Callable
BaseHolder "*"-up-*"1" EditFormElementAdapter
FormElement "1"-down->"1" ElementType
FormElement "1"-down->"1" ExtraFormData
ServiceForm "1"*-"*" FormElement
FieldValidator "*"-"1" Updatable
DataModifiedHook "1"-down->"1" Callable
DatabaseHandler "1"-right->"*" Account
DatabaseHandler "1"->"*" ServiceForm
DatabaseHandler "1"-down->"*" DataModifiedHook
AdminAccountManageActivity -> Account
EditFormActivity "1"->"1" ServiceForm
ServiceForm "*"<-down-"1" BranchServiceAdapter 

@enduml